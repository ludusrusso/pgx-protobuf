// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: test.sql

package queries

import (
	"context"

	proto "pgx-protobuf/proto"
)

const createTest = `-- name: CreateTest :exec
INSERT INTO test_cols (data) VALUES ($1)
`

type CreateTestParams struct {
	Data *proto.Test `json:"data"`
}

func (q *Queries) CreateTest(ctx context.Context, arg CreateTestParams) error {
	_, err := q.db.Exec(ctx, createTest, arg.Data)
	return err
}

const getTests = `-- name: GetTests :many
SELECT id, data FROM test_cols
`

func (q *Queries) GetTests(ctx context.Context) ([]TestCol, error) {
	rows, err := q.db.Query(ctx, getTests)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []TestCol
	for rows.Next() {
		var i TestCol
		if err := rows.Scan(&i.ID, &i.Data); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
